# general

- find a nice acronym for round
- interface between the algorithm and the predicate
- expected number of messages for a round: inferred from the send function
- locally testable safety/liveness conditions: of the form ∀ p. QF-φ(p)
- split the sources into multiple parts/sub-projects
  so we can use macros for the testing and debugging in the main project
  cleaner separation between the runtime and the declarations


# implementation

- timeout for the predicate layer
- more predicates 
- Process.exit
- ghost variables: make sure they are only read in the verification part and remove at compile time
- too much contention in the message reception and delivery


# verification

- generate a transition relation for the round
- add temporal elements to formula/boolean 
- decision procedure

# network emulation: packet loss, delay, ...

- http://www.linuxfoundation.org/collaborate/workgroups/networking/netem
- https://gist.github.com/trongthanh/1196596
- http://www.cs.virginia.edu/~sdb7e/os_project/assignment.html

